name: Auto Material Symbols Fonts Update

on:
  workflow_dispatch:

  schedule:
    - cron: '30 1 * * *'  # Runs at 01:30 UTC every day

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
    
    strategy:
      fail-fast: false

      
    steps:

    - name: Checkout curent repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Clone Woff2
      run: |
        git clone --recursive https://github.com/google/woff2.git
        
    - name: Build Woff2
      run: |
        cd woff2
        make clean all

    - name: Initialize npm and install material-symbols
      run: |
        npm init -y
        npm install material-symbols@latest
        npm install @material-symbols/font-100@latest
        npm install @material-symbols/font-200@latest
        npm install @material-symbols/font-300@latest
        npm install @material-symbols/font-400@latest
        npm install @material-symbols/font-500@latest
        npm install @material-symbols/font-600@latest
        npm install @material-symbols/font-700@latest

    - name: Show files
      run: |
        ls

    - name: Decompress Woff2 Fonts
      run: |
        find ./node_modules -type f -name "*.woff2" -print0 | while IFS= read -r -d '' file; do
          ./woff2/woff2_decompress "$file"
        done

    - name: Copy .ttf files to src/qtmdi/icons
      run: |
        mkdir -p ./src/qtmdi/icons/base
        mkdir -p ./src/qtmdi/icons/100
        mkdir -p ./src/qtmdi/icons/200
        mkdir -p ./src/qtmdi/icons/300
        mkdir -p ./src/qtmdi/icons/400
        mkdir -p ./src/qtmdi/icons/500
        mkdir -p ./src/qtmdi/icons/600
        mkdir -p ./src/qtmdi/icons/700
        cp ./node_modules/material-symbols/*.ttf ./src/qtmdi/icons/base
        cp ./node_modules/@material-symbols/font-100/*.ttf ./src/qtmdi/icons/100
        cp ./node_modules/@material-symbols/font-200/*.ttf ./src/qtmdi/icons/200
        cp ./node_modules/@material-symbols/font-300/*.ttf ./src/qtmdi/icons/300
        cp ./node_modules/@material-symbols/font-400/*.ttf ./src/qtmdi/icons/400
        cp ./node_modules/@material-symbols/font-500/*.ttf ./src/qtmdi/icons/500
        cp ./node_modules/@material-symbols/font-600/*.ttf ./src/qtmdi/icons/600
        cp ./node_modules/@material-symbols/font-700/*.ttf ./src/qtmdi/icons/700

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ttf
        path: |
          ./node_modules/material-symbols/*.tff
          ./node_modules/@material-symbols/**/*.ttf

    - name: Commit and Push Changes (Fonts update)
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Scheduled material-symbols update"
        commit_options: "--no-verify"
        file_pattern: "src/qtmdi/icons/**/*.ttf"
        name: "github-actions[bot]"
        email: "41898282+github-actions[bot]@users.noreply.github.com"
        push: true

    - name: Check if changes were committed
      id: check_changes
      run: |
        if git log -1 --pretty=%B | grep -q "Scheduled material-symbols update"; then
          echo "changes_made=false" >> $GITHUB_OUTPUT
        else
          echo "changes_made=true" >> $GITHUB_OUTPUT
        fi

    - name: Install Python
      id: install_python
      if: env.updated == 'true'
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Replace '3.x' with the specific version you need

    - name: Configure git user
      if: steps.check_changes.outputs.changes_made == 'true'
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - name: Bump version
      if: steps.check_changes.outputs.changes_made == 'true'
      run: |
        python -m pip install --upgrade bump2version toml
        bump2version patch --allow-dirty

    - name: Push version to current branch
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        branch: ${{ github.ref }}

    - name: Extract Version
      id: extract_version
      run: |
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        echo "Extracted version is $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      if: steps.check_changes.outputs.changes_made == 'true'
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        draft: true
        prerelease: false